name: Widget - E2E

on:
  workflow_dispatch:
    inputs:
      tenantUrl:
        description: "Tenant URL"
        required: true
        type: string
      spec_files:
        description: "Spec files(comma separated list)"
        required: false
        type: string
      browser:
        description: "Browser"
        required: true
        type: choice
        default: "chrome"
        options:
          - "chrome"
          - "edge"
          - "firefox"
      notify_on_run_completion:
        description: "Notify when run completes"
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"

env:
  E2E_SPEC_FILES: "cypress/integration/**/*"

jobs:
  setup-variables:
    runs-on: [ubuntu-latest]
    outputs:
      spec_files: ${{steps.determine-spec-files.outputs.spec_files}}

    steps:
      - name: Determine spec files to use
        id: determine-spec-files
        run: |
          if [[ -z "${{ github.event.inputs.spec_files }}" ]]; then
            echo "spec_files=${{ env.E2E_SPEC_FILES }}" >> $GITHUB_OUTPUT
          else
            echo "spec_files=${{ github.event.inputs.spec_files }}" >> $GITHUB_OUTPUT
          fi
  cypress-run:
    needs: [setup-variables]
    uses: ./.github/workflows/cypress-test.yml
    with:
      tenantUrl: ${{ inputs.tenantUrl }}
      project_directory: ./cypress-E2E-tests/
      spec_files: ${{needs.setup-variables.outputs.spec_files}}
      browser: ${{github.event.inputs.browser}}

    secrets:
      AUTOTEST_USERNAME1: ${{ secrets.AUTOTEST_USERNAME1 }}
      AUTOTEST_USERNAME1_PASSWORD: ${{ secrets.AUTOTEST_USERNAME1_PASSWORD }}
      AUTOTEST_USERNAME2: ${{ secrets.AUTOTEST_USERNAME2 }}
      AUTOTEST_USERNAME2_PASSWORD: ${{ secrets.AUTOTEST_USERNAME2_PASSWORD }}

  send-notification:
    needs: [setup-variables, cypress-run]
    runs-on: [ubuntu-latest]
    if: ${{ github.event.inputs.notify_on_run_completion != 'no' }}
    timeout-minutes: 5
    continue-on-error: true
    steps:
      - name: Compose notification content
        id: notification-content
        run: |
          if [[ ${{contains(needs.*.result, 'failure')}} == true ]]; then

            title='E2E tests run on tenant ${{github.event.inputs.tenantUrl}} failed'
            themeColor='FF0000'
            needsJSON=$(echo '${{ toJson(needs) }}' | jq -c .)
            failedJobs=$(echo $needsJSON | jq -r '. | with_entries(select(.value.result == "failure")) | keys[]')
            failedJobs=$(echo $failedJobs | sed 's/ /, /g')
            text="The following jobs failed: $failedJobs"
            linkToWorkflow=${GITHUB_SERVER_URL}/${{github.repository}}/actions/runs/${{github.run_id}}
            buttonLabel='View failures'
          else
            title='E2E tests run on tenant ${{github.event.inputs.tenantUrl}} complete'
            themeColor='00FF00'
            text="Run complete"
            linkToWorkflow=${GITHUB_SERVER_URL}/${{github.repository}}/actions/runs/${{github.run_id}}
            buttonLabel='View summary'
          fi

          echo "title=$title" >> $GITHUB_OUTPUT
          echo "themeColor=$themeColor" >> $GITHUB_OUTPUT
          echo "text=$text" >> $GITHUB_OUTPUT
          echo "actionLink=$linkToWorkflow" >> $GITHUB_OUTPUT
          echo "workflowRunNumber=${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          echo "buttonLabel=$buttonLabel" >> $GITHUB_OUTPUT

      - name: Send notification
        uses: lra/notify-ms-teams@v1.0.1
        with:
          webhook_url: ${{secrets.MS_NOTIFICATIONS_WEBHOOK_URL}}
          title: ${{steps.notification-content.outputs.title}}
          text: ${{steps.notification-content.outputs.text}}
          button_label: ${{steps.notification-content.outputs.buttonLabel}}
          action_link: ${{steps.notification-content.outputs.actionLink}}
          theme_color: ${{steps.notification-content.outputs.themeColor}}
          workflow_name: ${{github.workflow}}
          workflow_run_number: ${{steps.notification-content.outputs.workflowRunNumber}}
